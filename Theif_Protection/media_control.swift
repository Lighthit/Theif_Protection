import Foundation
import AVFoundation
import Combine
import CoreLocation

class media_control: NSObject, ObservableObject {
    @Published var Distances: String?
    var gps = GPS_module()
    private var cancellables = Set<AnyCancellable>()

    // ‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á (‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ)
    private let referenceLocation = CLLocation(latitude: 13.7563, longitude: 100.5018) // ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø

    override init() {
        super.init()
        observeLocation()
    }
    
    //MARK: Distance calculation
    private func observeLocation() {
        gps.$currentLocation
            .compactMap { $0 } // ‡πÄ‡∏≠‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô nil
            .sink { [weak self] location in
                let distance = location.distance(from: self?.referenceLocation ?? location) // fallback ‡πÄ‡∏ú‡∏∑‡πà‡∏≠ reference ‡πÄ‡∏õ‡πá‡∏ô nil
                self?.Distances = String(format: "%.2f", distance) // ‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏°‡∏ï‡∏£
                print("üì° Updated Distance: \(self?.Distances ?? "-") meters")
            }
            .store(in: &cancellables)
    }
}
